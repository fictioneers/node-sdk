/* tslint:disable */
/* eslint-disable */
/**
 * Fictioneers - Audience APIs.
 * JSON APIs used to integrate with the Fictioneers platform served from https://api.fictioneers.co.uk
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServiceStatus } from './ServiceStatus';
import {
    ServiceStatusFromJSON,
    ServiceStatusFromJSONTyped,
    ServiceStatusToJSON,
} from './ServiceStatus';
import type { UserTimelineEventSerializer } from './UserTimelineEventSerializer';
import {
    UserTimelineEventSerializerFromJSON,
    UserTimelineEventSerializerFromJSONTyped,
    UserTimelineEventSerializerToJSON,
} from './UserTimelineEventSerializer';
import type { UserTimelineEventStateChangeSerializer } from './UserTimelineEventStateChangeSerializer';
import {
    UserTimelineEventStateChangeSerializerFromJSON,
    UserTimelineEventStateChangeSerializerFromJSONTyped,
    UserTimelineEventStateChangeSerializerToJSON,
} from './UserTimelineEventStateChangeSerializer';

/**
 * Base serializer class for all metadata which can be included in a response. This is
 * used by the ResponseSerializer class.
 * 
 * This design pattern afford us the ability to include any generic meta data within
 * this block. For example achievements completed as a bi-product of another action,
 * or cursor/pagination/count metadata you might expect on a list endpoint.
 * @export
 * @interface MetaSerializer
 */
export interface MetaSerializer {
    /**
     * 
     * @type {Array<UserTimelineEventSerializer>}
     * @memberof MetaSerializer
     */
    changedTimelineEvents?: Array<UserTimelineEventSerializer>;
    /**
     * 
     * @type {Array<UserTimelineEventStateChangeSerializer>}
     * @memberof MetaSerializer
     */
    changedTimelineEventStates?: Array<UserTimelineEventStateChangeSerializer>;
    /**
     * 
     * @type {ServiceStatus}
     * @memberof MetaSerializer
     */
    serviceStatus?: ServiceStatus | null;
}

/**
 * Check if a given object implements the MetaSerializer interface.
 */
export function instanceOfMetaSerializer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MetaSerializerFromJSON(json: any): MetaSerializer {
    return MetaSerializerFromJSONTyped(json, false);
}

export function MetaSerializerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetaSerializer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'changedTimelineEvents': !exists(json, 'changed_timeline_events') ? undefined : ((json['changed_timeline_events'] as Array<any>).map(UserTimelineEventSerializerFromJSON)),
        'changedTimelineEventStates': !exists(json, 'changed_timeline_event_states') ? undefined : ((json['changed_timeline_event_states'] as Array<any>).map(UserTimelineEventStateChangeSerializerFromJSON)),
        'serviceStatus': !exists(json, 'service_status') ? undefined : ServiceStatusFromJSON(json['service_status']),
    };
}

export function MetaSerializerToJSON(value?: MetaSerializer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'changed_timeline_events': value.changedTimelineEvents === undefined ? undefined : ((value.changedTimelineEvents as Array<any>).map(UserTimelineEventSerializerToJSON)),
        'changed_timeline_event_states': value.changedTimelineEventStates === undefined ? undefined : ((value.changedTimelineEventStates as Array<any>).map(UserTimelineEventStateChangeSerializerToJSON)),
        'service_status': ServiceStatusToJSON(value.serviceStatus),
    };
}

