/* tslint:disable */
/* eslint-disable */
/**
 * Fictioneers - Audience APIs.
 * JSON APIs used to integrate with the Fictioneers platform served from https://api.fictioneers.co.uk
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContentIntegrationSerializer,
    ContentIntegrationSerializerFromJSON,
    ContentIntegrationSerializerFromJSONTyped,
    ContentIntegrationSerializerToJSON,
} from './ContentIntegrationSerializer';
import {
    NarrativeEventType,
    NarrativeEventTypeFromJSON,
    NarrativeEventTypeFromJSONTyped,
    NarrativeEventTypeToJSON,
} from './NarrativeEventType';

/**
 *     
 * @export
 * @interface TimelineEventSerializer
 */
export interface TimelineEventSerializer {
    /**
     * 
     * @type {string}
     * @memberof TimelineEventSerializer
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineEventSerializer
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineEventSerializer
     */
    description?: string;
    /**
     * 
     * @type {NarrativeEventType}
     * @memberof TimelineEventSerializer
     */
    type: NarrativeEventType;
    /**
     * 
     * @type {number}
     * @memberof TimelineEventSerializer
     */
    step?: number;
    /**
     * 
     * @type {{ [key: string]: Array<ContentIntegrationSerializer>; }}
     * @memberof TimelineEventSerializer
     */
    contentIntegrations: { [key: string]: Array<ContentIntegrationSerializer>; };
    /**
     * 
     * @type {string}
     * @memberof TimelineEventSerializer
     */
    narrativeEventId: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof TimelineEventSerializer
     */
    narrativeEventCustomData?: { [key: string]: string; };
}

export function TimelineEventSerializerFromJSON(json: any): TimelineEventSerializer {
    return TimelineEventSerializerFromJSONTyped(json, false);
}

export function TimelineEventSerializerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineEventSerializer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': NarrativeEventTypeFromJSON(json['type']),
        'step': !exists(json, 'step') ? undefined : json['step'],
        'contentIntegrations': json['content_integrations'],
        'narrativeEventId': json['narrative_event_id'],
        'narrativeEventCustomData': !exists(json, 'narrative_event_custom_data') ? undefined : json['narrative_event_custom_data'],
    };
}

export function TimelineEventSerializerToJSON(value?: TimelineEventSerializer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'type': NarrativeEventTypeToJSON(value.type),
        'step': value.step,
        'content_integrations': value.contentIntegrations,
        'narrative_event_id': value.narrativeEventId,
        'narrative_event_custom_data': value.narrativeEventCustomData,
    };
}

